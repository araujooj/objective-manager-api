// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TodoPriority {
  HIGH
  MEDIUM
  LOW
}

enum TodoStatus {
  TODO
  IN_PROGRESS
  COMPLETED
  STUCK
}

enum FlowTitles {
  CLIMBING_THE_MOUNTAIN
  SLOW_BURN
  EAT_THAT_FROG
}

enum PackageFocusType {
  LIGHT
  MEDIUM
  HEAVY
}

// Dev, Rpg, Life, Health 
model Inbox {
  id        String   @id @default(uuid())
  title     String
  userId    String
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Todo      Todo[]
  Okr       Okr[]
}

// Limpar minha mesa, lavar as louÃ§as
model Todo {
  id             String       @id @default(uuid())
  title          String
  priority       TodoPriority @default(HIGH)
  dueDate        DateTime     @default(now())
  necessaryHours Decimal      @db.Decimal(9, 2)
  status         TodoStatus   @default(TODO)

  inbox   Inbox  @relation(fields: [inboxId], references: [id])
  inboxId String
  userId  String

  okr   Okr?    @relation(fields: [okrId], references: [id])
  okrId String?

  package   Package? @relation(fields: [packageId], references: [id])
  packageId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

// Limpar o meu ambiente
model Package {
  id     String @id @default(uuid())
  title  String
  userId String @unique

  flow   Flow?   @relation(fields: [flowId], references: [id])
  flowId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Todo Todo[]
}

// 3 pacotes, escolho flowo
model Flow {
  id          String     @id @default(uuid())
  title       FlowTitles @default(EAT_THAT_FROG)
  description String?
  userId      String     @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  Package   Package[]
}

// Inbox > Todo > Package > Flow  > Focus

model Okr {
  id             String   @id @default(uuid())
  title          String
  startDate      DateTime @default(now())
  endDate        DateTime
  necessaryHours Int

  inbox   Inbox  @relation(fields: [inboxId], references: [id])
  inboxId String
  userId  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Todo      Todo[]
}
